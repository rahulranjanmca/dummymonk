{"version":3,"sources":["redux/fakeApiTypes.ts","menu.js","Router.tsx","pages/domain-list/DomainList.tsx","components/RenderComponents.js","pages/domain-view/DomainView.js","admin/Homepage/index.js","redux/fakeApiAction.js","theme/palette.js","theme/index.js","components/app/App.tsx","serviceWorker.ts","redux/index.js","redux/fakeApiReducers.js","theming/colors.ts","theming/lightTheme.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","FREE_DOMAINS_LIST","PAID_DOMAINS_LIST","ADD_FREE_DOMAIN","pages","title","path","icon","MapIcon","useStyles","makeStyles","theme","root","width","maxWidth","horizMenu","& div","display","flexContainer","flexDirection","padding","TopMenu","withRouter","connect","state","ownProps","name","auth","userInfo","userId","id","accessToken","tokenInfo","post","get","put","showModal","hideModal","openLoginPopup","openRegisterPopup","props","classes","_React$useState","React","useState","_React$useState2","Object","C_Users_rahul_Documents_Development_canigenus_projects_dummy_monk_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","anchorEl","setAnchorEl","_React$useState3","_React$useState4","selectedIndex","setSelectedIndex","handleClickListItem","event","currentTarget","handleMenuItemClick","index","history","push","console","log","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","cani_common_react__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","dense","component","aria-label","_material_ui_core__WEBPACK_IMPORTED_MODULE_3__","mdDown","_material_ui_core__WEBPACK_IMPORTED_MODULE_4__","button","aria-haspopup","aria-controls","_material_ui_core_ListItemText__WEBPACK_IMPORTED_MODULE_7__","primary","onClick","_material_ui_core_Avatar__WEBPACK_IMPORTED_MODULE_11__","alt","avatar","RouterLink","substring","_material_ui_core_Link__WEBPACK_IMPORTED_MODULE_14__","href","variant","secondary","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_13___default","fontSize","_material_ui_core_Menu__WEBPACK_IMPORTED_MODULE_8__","keepMounted","open","Boolean","onClose","_material_ui_core_MenuItem__WEBPACK_IMPORTED_MODULE_6__","key","selected","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_10__","module","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_hot_loader__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","_admin_Homepage__WEBPACK_IMPORTED_MODULE_4__","cani_common_react__WEBPACK_IMPORTED_MODULE_5__","menu__WEBPACK_IMPORTED_MODULE_6__","_material_ui_styles__WEBPACK_IMPORTED_MODULE_7__","_theme__WEBPACK_IMPORTED_MODULE_8__","pages_domain_list_DomainList__WEBPACK_IMPORTED_MODULE_9__","_pages_domain_view_DomainView__WEBPACK_IMPORTED_MODULE_10__","hot","sidebarVariant","isOpen","sidebarMenu","topBarMenu","exact","Homepage","DomainList","DomainView","react_redux__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core__WEBPACK_IMPORTED_MODULE_5__","cani_common_react__WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_7__","_material_ui_core_CardHeader__WEBPACK_IMPORTED_MODULE_8__","domainList","common","useEffect","map","domain","style","marginTop","renderTextField","_ref","color","rows","multiline","input","label","type","_ref$meta","meta","touched","error","custom","objectWithoutProperties","react_default","TextField","assign","fullWidth","helperText","renderSelect","_ref4","_ref4$meta","children","Fragment","select","value","ApiRuleForm","apiList","apiRuleList","apiRunHistoryList","apiModalShown","modalStatus","apiEditModalShown","ruleEditModalShown","updateRuleStatus","status","currentApi","currentRule","clearMessage","apiListSize","length","_useState","_useState2","slicedToArray","setId","_useState3","_useState4","ruleId","setRuleId","responseStatus","field","operator","_useState5","_useState6","requestMethod","setRequestMethod","_useState7","_useState8","url","setUrl","_useState9","_useState10","apiId","setApiId","_useState11","_useState12","pathType","setPathType","_useState13","_useState14","setResponseStatus","_useState15","_useState16","responseDelayInSec","setResponseDelayInSec","_useState17","_useState18","header","setHeader","_useState19","_useState20","response","setResponse","_useState21","_useState22","selectedRow","setSelectedRow","criterias","caseInsensitive","match","params","fieldType","responseStatusInSec","success","closeRuleEditPopup","limit","pageNo","openApiEditPopup","openRuleEditPopup","updateRule","asyncToGenerator","regenerator_default","mark","_callee","values","wrap","_context","prev","next","objectSpread","fakerApiId","stop","_x","apply","this","arguments","Card","Grid","container","md","item","justify","xs","Typography","direction","alignItems","Link","SettingsApplications_default","Divider","Table","TableHead","TableRow","TableCell","TableBody","row","cursor","hover","scope","paddingLeft","paddingRight","borderRadius","backgroundColor","Avatar","height","CheckCircle_default","apiRuleId","colSpan","spacing","request","disabled","TableFooter","CardContent","Dialog","disableBackdropClick","disableEscapeKeyDown","aria-labelledby","DialogTitle","IconButton","Close_default","Add_default","DialogContent","dividers","Fab","size","Edit_default","format","Delete_default","delete","CardHeader","FormControl","InputLabel","htmlFor","NativeSelect","onChange","target","inputProps","action","react_highlight_default","laungauge","sm","InputLabelProps","shrink","CardActions","Button","endpointId","initialValues","onSubmit","reduxForm","form","validate","errors","forEach","enableReinitialize","handleSubmit","Field","MenuItem","require","createTextField","float","& fieldset","borderBottomRightRadius","borderTopRightRadius","addOn","fontWeight","lineHeight","textAlign","border","borderBottomLeftRadius","borderTopLeftRadius","clientCode","client","permissions","allPermissions","updateEndpointStatus","addDomain","dispatch","getState","savedDomain","caniAxios","sent","payload","data","_x2","setDomain","Container","Paper","elevation","square","Box","m","CssBaseline","alignContent","align","aria-describedby","alignSelf","List","subheader","ListItem","ListItemIcon","Send_default","ListItemText","palette","black","white","main","createMuiTheme","zIndex","appBar","drawer","App","Router","window","location","hostname","combineReducers","formReducer","clientReducers","authReducers","statusReducers","commonReducers","eav","eavReducers","eavEntity","entityReducers","users","usersReducers","fakeApi","undefined","compareIds","freeDomains","defineProperty","concat","toConsumableArray","Colors","LIGHT","DARK","DODGERBLUE","GAINSBORO","FORESTGREEN","ORANGERED","CRIMSON","LIGHTSLATEGRAY","LightTheme","colors","light","dark","warning","prominent","granite","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistConfig","storage","whitelist","persistedReducer","persistReducer","reducers","store","createStore","INITIAL_STATE","applyMiddleware","thunk","persistor","persistStore","rootElement","document","getElementById","elements","styled_components_browser_esm","react_redux_es","integration_react","loading","react_toastify","autoClose","app_App","hasChildNodes","hydrate","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d67412a.chunk.js","sourcesContent":["export const FREE_DOMAINS_LIST = 'FREE_DOMAINS_LIST';\r\nexport const PAID_DOMAINS_LIST = 'PAID_DOMAINS_LIST';\r\nexport const ADD_FREE_DOMAIN = 'ADD_FREE_DOMAIN';\r\n","import MapIcon from '@material-ui/icons/Map';\r\nimport {Hidden, List, ListItem} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport {Link as RouterLink} from \"react-router-dom\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport {connect} from \"react-redux\";\r\nimport {get, hideModal, post, put, showModal} from \"cani-common-react\";\r\nimport {withRouter} from \"react-router\";\r\nimport {openLoginPopup, openRegisterPopup, LocalLoginPopup, RegisterPopup} from \"cani-common-react\";\r\n\r\nconst pages = [\r\n    {\r\n        title: \"Usage\",\r\n        path: \"usages\",\r\n        icon: MapIcon\r\n    },\r\n    {\r\n        title: \"FAQs\",\r\n        path: \"/faqs\",\r\n        icon: MapIcon\r\n    },\r\n    {\r\n        title: \"Pricing\",\r\n        path: \"/pricing\",\r\n        icon: MapIcon\r\n    }\r\n    ]\r\n;\r\n\r\nexport default pages;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: \"300px\"\r\n    },\r\n    horizMenu: { '& div' : {\r\n            display: 'flex'\r\n        }\r\n    },\r\n     flexContainer :{\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        padding: 0,\r\n    }\r\n}));\r\n\r\nconst options = [\r\n    'Show some love to Material-UI',\r\n    'Show all notification content',\r\n    'Hide sensitive notification content',\r\n    'Hide all notification content',\r\n];\r\n\r\nconst TopMenuOne = (props) => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [selectedIndex, setSelectedIndex] = React.useState(0);\r\n\r\n    function handleClickListItem(event) {\r\n        setAnchorEl(event.currentTarget);\r\n    }\r\n\r\n    function handleMenuItemClick(event, index) {\r\n        setSelectedIndex(index);\r\n        setAnchorEl(null);\r\n        if(index === 2) {\r\n          props.history.push(\"/domains\");\r\n        }\r\n    }\r\n\r\n    function handleClose() {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    console.log(props.openLoginPopup);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LocalLoginPopup/>\r\n            <RegisterPopup/>\r\n            <List dense={true} component=\"nav\" className={classes.flexContainer}  aria-label=\"Device settings\">\r\n                <Hidden mdDown>\r\n                <ListItem dense={true}\r\n                    button\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"lock-menu\"\r\n                    aria-label=\"when device is locked\"\r\n                >\r\n                    <ListItemText primary=\"Usage\" />{/* secondary={options[selectedIndex]}*/}\r\n                </ListItem>\r\n                <ListItem  dense={true}\r\n                    button\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"lock-menu\"\r\n                    aria-label=\"when device is locked\"\r\n                >\r\n                    <ListItemText primary=\"FAQs\" />{/* secondary={options[selectedIndex]}*/}\r\n                </ListItem>\r\n                <ListItem  dense={true}\r\n                    button\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"lock-menu\"\r\n                    aria-label=\"when device is locked\"\r\n                >\r\n                    <ListItemText primary=\"Pricing\" />{/* secondary={options[selectedIndex]}*/}\r\n                </ListItem>\r\n                </Hidden>\r\n                {!props.accessToken && <ListItem  dense={true}\r\n                                                       button\r\n                                                       aria-haspopup=\"true\"\r\n                                                       aria-controls=\"lock-menu\"\r\n                                                       aria-label=\"when device is locked\"\r\n                                                       onClick={props.openLoginPopup}\r\n                >\r\n                    <ListItemText primary=\"Login\" /></ListItem>}\r\n                {!props.accessToken && <ListItem  dense={true}\r\n                                                       button\r\n                                                       aria-haspopup=\"true\"\r\n                                                       aria-controls=\"lock-menu\"\r\n                                                       aria-label=\"when device is locked\"\r\n                                                       onClick={props.openRegisterPopup}\r\n                >\r\n                    <ListItemText primary=\"Register\" /></ListItem>}\r\n                {!props.accessToken && <ListItem dense={true}\r\n                                                 button\r\n                                                 aria-haspopup=\"true\"\r\n                                                 aria-controls=\"lock-menu\"\r\n                                                 aria-label=\"when device is locked\"\r\n                                                 onClick={handleClickListItem}\r\n                >\r\n                    <ListItemText primary=\"Sign In\"/>{/* secondary={options[selectedIndex]}*/}\r\n                </ListItem>\r\n                }\r\n\r\n                {props.accessToken && <div onClick={handleClickListItem}><ListItem dense={true}\r\n                           button\r\n                           aria-haspopup=\"true\"\r\n                           aria-controls=\"lock-menu\"\r\n                           aria-label=\"when device is locked\"\r\n                >\r\n                    <Avatar\r\n                        alt=\"Person\"\r\n                        className={classes.avatar}\r\n                        component={RouterLink}\r\n                    >\r\n                        {props.name.substring(0, 1)}\r\n                    </Avatar>\r\n                    <Link href=\"#\" variant=\"body2\">\r\n                        <ListItemText secondary={props.name}/>{/* secondary={options[selectedIndex]}*/}\r\n                    </Link>\r\n                    <ExpandMoreIcon fontSize=\"small\"/>\r\n                </ListItem>\r\n                </div>\r\n                }\r\n            </List>\r\n            <Menu\r\n                id=\"lock-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                    <MenuItem\r\n                        key={'edit account'}\r\n                        selected={1 === selectedIndex}\r\n                        onClick={event => handleMenuItemClick(event, 1)}\r\n                    >\r\n                        Edit Account\r\n                    </MenuItem>\r\n                <Divider/>\r\n                <MenuItem\r\n                    key={'edit account'}\r\n                    selected={2 === selectedIndex}\r\n                    onClick={event => handleMenuItemClick(event, 2)}\r\n                >\r\n                    Your Endpoints\r\n                </MenuItem>\r\n                <MenuItem\r\n                    key={'subscription'}\r\n                    selected={3 === selectedIndex}\r\n                    onClick={event => handleMenuItemClick(event, 3)}\r\n                >\r\n                    Your Subscription\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        name: state.auth.userInfo ? state.auth.userInfo.name : \"\",\r\n        userId: state.auth.userInfo ? state.auth.userInfo.id : \"\",\r\n        accessToken: state.auth.tokenInfo.accessToken,\r\n    }\r\n};\r\n\r\n\r\nexport const TopMenu =  withRouter(connect(mapStateToProps, {\r\n    post, get, put, showModal,\r\n    hideModal,openLoginPopup, openRegisterPopup\r\n})(TopMenuOne));\r\n","import React from 'react';\r\nimport {hot} from 'react-hot-loader'\r\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\r\nimport Homepage from './admin/Homepage';\r\nimport {LoggedInLayout} from \"cani-common-react\";\r\nimport pages, {TopMenu} from 'menu';\r\nimport { ThemeProvider as  ThemeProviderMat} from '@material-ui/styles';\r\nimport theme from './theme'\r\nimport DomainList from 'pages/domain-list/DomainList';\r\nimport DomainView from \"./pages/domain-view/DomainView\";\r\n\r\nconst Router: React.FC = () => {\r\n  return (\r\n      <ThemeProviderMat theme={theme}>\r\n          <BrowserRouter>\r\n                <Switch>\r\n                  <LoggedInLayout sidebarVariant={'temporary'} isOpen={true} sidebarMenu={pages} topBarMenu={<TopMenu/>}>\r\n                    <Route exact path=\"/\" component={Homepage} />\r\n                    <Route exact path=\"/domains\" component={DomainList} />\r\n                    <Route exact path=\"/domains/:name\" component={DomainView} />\r\n                  </LoggedInLayout>\r\n                </Switch>\r\n          </BrowserRouter>\r\n      </ThemeProviderMat>\r\n  );\r\n}\r\n\r\nexport default hot(module)(Router);\r\n","import React, {useEffect} from 'react';\r\nimport './DomainList.css';\r\nimport {connect} from \"react-redux\";\r\nimport {Grid, Card, Divider, Link} from \"@material-ui/core\";\r\nimport {post} from 'cani-common-react'\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nconst DomainList: React.FC = (props: any) => {\r\n    useEffect(() => {\r\n        props.post(false,'integrations9', 'integrations',  'endpoints',  'search', {}, 'integrations-list')\r\n    }, []);\r\n  return (\r\n    <div className=\"App\">\r\n        <Card>\r\n            <CardHeader title={'Your Domains'}/>\r\n            <Divider/>\r\n        {props.domainList && props.domainList.map(domain => {\r\n            return <Card style={{marginTop: '5px'}}> <Link href={\"/domains/\"+domain.name}><CardContent title={domain.name}> #{domain.name}</CardContent></Link></Card>\r\n        })}\r\n        </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {domainList: state.common['integrations_endpoints_integrations-list']}\r\n}\r\n\r\nexport default connect(mapStateToProps, {post})(DomainList);\r\n","import TextField from \"@material-ui/core/TextField\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport React from 'react'\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nexport const renderTextField = (\r\n    { color, variant, rows, multiline, input, label, type,  meta: { touched, error }, ...custom },\r\n) => (\r\n    <TextField\r\n        type={type}\r\n        multiline={multiline}\r\n        rows={rows}\r\n        label={label}\r\n        fullWidth={true}\r\n        variant={variant}\r\n        color={color}\r\n        error={touched && error}\r\n        helperText={touched && error}\r\n        {...input}\r\n        {...custom}\r\n    />\r\n);\r\n\r\nexport const renderCheckbox = ({ color, input, label }) => (\r\n    <Checkbox\r\n        label={label}\r\n        checked={!!input.value}\r\n        onCheck={input.onChange}\r\n        color={color}\r\n    />\r\n);\r\n\r\nexport const renderRadioGroup = ({ input, ...rest }) => (\r\n    <RadioGroup\r\n        {...input}\r\n        {...rest}\r\n        valueSelected={input.value}\r\n        onChange={(event, value) => input.onChange(value)}\r\n    />\r\n);\r\n\r\nexport const renderSelect = (\r\n    { input, label,  variant,  meta: { touched, error }, children, ...custom }\r\n) => (\r\n    <>\r\n        {<TextField\r\n        select\r\n        fullWidth={true}\r\n        label={label}\r\n        variant={variant}\r\n        error={touched && error}\r\n        helperText={touched && error}\r\n        {...custom}\r\n        {...input}\r\n        value={input.value}\r\n    >\r\n        {children}\r\n    </TextField>}\r\n        {/*<FormControl fullWidth={true} variant = {variant}>\r\n        <InputLabel  htmlFor=\"outlined-age-simple\">\r\n            {label}\r\n        </InputLabel>\r\n        <Select\r\n            onChange={(event, index, value) => input.onChange(value)}\r\n            {...custom}\r\n            inputProps={{\r\n                name: 'age',\r\n                id: 'outlined-age-simple',\r\n            }}\r\n            {...input}\r\n        >\r\n            {children}\r\n        </Select>\r\n     </FormControl>*/}\r\n        </>\r\n);\r\n","import React, {useEffect, useState} from 'react';\r\nimport './DomainView.css';\r\nimport {connect} from \"react-redux\";\r\nimport {Card, Divider, Avatar, DialogTitle, IconButton, DialogContent, Fab} from \"@material-ui/core\";\r\nimport {post, get, showModal, hideModal, put, clearMessage} from 'cani-common-react'\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Highlight from 'react-highlight'\r\nimport SettingsApplicationsIcon from '@material-ui/icons/SettingsApplications';\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport NativeSelect from \"@material-ui/core/NativeSelect\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {renderSelect, renderTextField} from \"../../components/RenderComponents\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TablePaginationActions from \"@material-ui/core/TablePagination/TablePaginationActions\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst DomainView = (props) => {\r\n\r\n    const apiListSize = props.apiList ? props.apiList.length : 0;\r\n    const [id, setId] = useState('');\r\n    const [ruleId, setRuleId] = useState('');\r\n    let currentRule = {responseStatus: 200, field: 'BODY', operator: \"CONTAINS\"};\r\n    const [requestMethod, setRequestMethod] = useState(\"GET\");\r\n    const [url, setUrl] = useState(\"\");\r\n    const [apiId, setApiId] = useState(\"\");\r\n    const [pathType, setPathType] = useState(\"EXACT_MATCH\");\r\n    const [responseStatus, setResponseStatus] = useState(200);\r\n    const [responseDelayInSec, setResponseDelayInSec] = useState(0.0);\r\n    const [header, setHeader] = useState(\"{}\");\r\n    const [response, setResponse] = useState(\"{}\");\r\n    const [selectedRow, setSelectedRow] = useState(-1);\r\n    console.log(selectedRow);\r\n    useEffect(() => {\r\n        props.post(false, 'integrations9', 'integrations', 'endpoints', 'search', {\r\n            criterias: [{\r\n                field: \"name\",\r\n                caseInsensitive: false,\r\n                value: props.match.params.name\r\n            }]\r\n        }, 'endpoint-get')\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(props.domain) {\r\n            setId(props.domain.id);\r\n        }\r\n    }, [props.domain]);\r\n\r\n    useEffect(() => {\r\n        if (apiId) {\r\n            props.get(false, 'integrations9', 'integrations', 'faker-apis', '' + apiId, 'faker-get-id', 'faker-get-id');\r\n            props.post(false, 'integrations9', 'integrations', 'api-rules', 'search', {\r\n                 criterias: [{\r\n                    fieldType: \"LONG\",\r\n                    field: \"fakerApiId\",\r\n                    value: apiId\r\n                }]\r\n            }, 'api-rules-list');\r\n        }\r\n    }, [apiId]);\r\n\r\n    useEffect(() => {\r\n        if (props.currentApi) {\r\n            setApiId(props.currentApi.id);\r\n            setRequestMethod(props.currentApi.requestMethod);\r\n            setPathType(props.currentApi.pathType);\r\n            setUrl(props.currentApi.url);\r\n            setResponseStatus(props.currentApi.responseStatus);\r\n            setResponseDelayInSec(props.currentApi.responseStatusInSec);\r\n            setHeader(props.currentApi.header);\r\n            setResponse(props.currentApi.response);\r\n        }\r\n    }, [props.currentApi]);\r\n\r\n\r\n    useEffect(() => {\r\n        props.post(false, 'integrations9', 'integrations', 'faker-apis', 'search', {\r\n            criterias: [{\r\n                field: \"endpoint.name\",\r\n                caseInsensitive: false,\r\n                value: props.match.params.name\r\n            }]\r\n        }, 'api-list-get')\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (ruleId) {\r\n            props.get(false, 'integrations9', 'integrations', 'api-rules', '' + ruleId, 'rule-id', 'rule-get-id');\r\n        }\r\n    }, [ruleId]);\r\n\r\n    useEffect(() => {\r\n        if (props.updateRuleStatus && props.updateRuleStatus.success) {\r\n            props.clearMessage(\"integrations\", \"api-rules\", [\"\"]);\r\n            closeRuleEditPopup();\r\n            setRuleId(null);\r\n        }\r\n    }, [props.updateRuleStatus\r\n    ]);\r\n    useEffect(() => {\r\n        props.post(false, 'integrations9', 'integrations', 'faker-api-run-histories', 'search', {\r\n            limit: 10, pageNo:1,  criterias: [{\r\n                field: \"endpoint.name\",\r\n                caseInsensitive: false,\r\n                value: props.match.params.name\r\n            }]\r\n        }, 'api-run-histories-list')\r\n    }, []);\r\n    const openApiPopup = () => {\r\n        props.showModal(\"integration\", 'mock-api-code', 'list');\r\n    };\r\n    const closeApiPopup = () => {\r\n        setApiId(null);\r\n        props.hideModal(\"integration\", 'mock-api-code', 'list');\r\n    };\r\n    const openApiEditPopup = () => {\r\n        props.showModal(\"integration\", 'mock-api-code', 'edit');\r\n    };\r\n    const closeApiEditPopup = () => {\r\n        props.hideModal(\"integration\", 'mock-api-code', 'edit');\r\n        setApiId(null);\r\n    };\r\n    const openRuleEditPopup = () => {\r\n        props.showModal(\"integration\", 'mock-api-rule', 'edit');\r\n    };\r\n    const closeRuleEditPopup = () => {\r\n        props.hideModal(\"integration\", 'mock-api-rule', 'edit');\r\n        setRuleId(null);\r\n    };\r\n    const edit = (id) => {\r\n        setApiId(id);\r\n        openApiEditPopup();\r\n    };\r\n\r\n    const create = () => {\r\n        setApiId(null);\r\n        openApiEditPopup();\r\n    };\r\n\r\n    const editRule = (id) => {\r\n        setRuleId(id);\r\n        openRuleEditPopup();\r\n    };\r\n\r\n    const createRule = () => {\r\n        currentRule = {responseStatus: 200, field: 'BODY', operator: \"CONTAINS\"};\r\n        setRuleId(null);\r\n        openRuleEditPopup();\r\n    };\r\n\r\n    const deleteRule = (id) => {\r\n        props.delete(false, 'integrations9', 'integrations', 'api-rules', '' + id, 'rule-id', 'rule-get-id');\r\n    };\r\n\r\n    const deleteApi = (id) => {\r\n        props.delete(false, 'integrations9', 'integrations', 'faker-apis', '' + id, 'rule-id', 'rule-get-id');\r\n    };\r\n\r\n    const updateApi = () => {\r\n        props.put(false, 'integrations9', 'integrations', 'faker-apis', '', {\r\n            id: apiId,\r\n            requestMethod,\r\n            response,\r\n            header,\r\n            pathType,\r\n            url,\r\n            responseDelayInSec,\r\n            responseStatus\r\n        }, \"update\");\r\n    };\r\n\r\n    const saveApi = () => {\r\n        props.post(false, 'integrations9', 'integrations', 'faker-apis', '', {\r\n            endpointId: id,\r\n            requestMethod,\r\n            response,\r\n            header,\r\n            pathType,\r\n            url,\r\n            responseDelayInSec,\r\n            responseStatus\r\n        }, \"update\");\r\n\r\n    };\r\n\r\n    const updateRule = async (values) => {\r\n        console.log(values);\r\n        console.log(ruleId);\r\n        if (ruleId) {\r\n            props.put(false, 'integrations9', 'integrations', 'api-rules', '', {\r\n                id: ruleId,\r\n                fakerApiId: apiId,\r\n                ...values\r\n            }, \"update\");\r\n        } else {\r\n            props.post(false, 'integrations9', 'integrations', 'api-rules', '', {fakerApiId: id, ...values}, \"udpate\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Card>\r\n                <>\r\n                    <Grid container={true}><Grid md={6} item={true}><Grid container><Grid item justify={\"flex-end\"} xs={6}><Grid container justify={'flex-end'}><Typography variant={'h2'} >{props.match.params.name}</Typography></Grid></Grid><Grid item xs={6}><Grid direction={'row'} container alignItems={\"flex-end\"} justify={'flex-start'}> {'.api.monk.com'}</Grid></Grid></Grid></Grid>\r\n                        <Grid md={6} item={true}> <Grid justify={'flex-end'} alignItems={\"flex-end\"} container={true}>\r\n                            <Link onClick={openApiPopup}><SettingsApplicationsIcon/> Mock Apis({apiListSize}) </Link>\r\n                        </Grid></Grid></Grid>\r\n                </>\r\n                <Divider/>\r\n                <Table aria-label=\"custom pagination table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Method Type</TableCell>\r\n                            <TableCell>URL</TableCell>\r\n                            <TableCell>Response</TableCell>\r\n                            <TableCell>Matching Api</TableCell>\r\n                            <TableCell>Matching Rule</TableCell>\r\n                            <TableCell>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.apiRunHistoryList && props.apiRunHistoryList.map((row, index) => {\r\n                            return <><TableRow style={{cursor: 'pointer'}} hover={true}\r\n                                               onClick={(event) => setSelectedRow(index)}\r\n                                               selected={index === selectedRow} key={row.name}>\r\n                                <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.requestMethod}\r\n                                </TableCell>\r\n                                <TableCell>\r\n                                    <div style={{\r\n                                        display: 'inline-block',\r\n                                        paddingLeft: '3px',\r\n                                        paddingRight: '3px',\r\n                                        borderRadius: 4,\r\n                                        color: '#c7254e',\r\n                                        backgroundColor: '#f9f2f4',\r\n                                        width: 'auto'\r\n                                    }}>\r\n                                        <>{row.url}</>\r\n                                    </div>\r\n                                </TableCell>\r\n                                <TableCell><Avatar style={{\r\n                                    borderRadius: 5,\r\n                                    height: 'auto',\r\n                                    width: 'auto',\r\n                                    display: \"inline-block\",\r\n                                    padding: '0px 2px',\r\n                                    backgroundColor: row.responseStatus >= 200 && row.responseStatus <= 299 ? '#18bc9c' : 'red'\r\n                                }}>{row.responseStatus}</Avatar></TableCell>\r\n                                <TableCell>{row.fakerApiId && <CheckCircleIcon/>}</TableCell>\r\n                                <TableCell>{row.apiRuleId && <CheckCircleIcon/>}</TableCell>\r\n                                <TableCell>{row.apiRuleId && <CheckCircleIcon/>}</TableCell>\r\n                                <TableCell>{row.apiRuleId && <CheckCircleIcon/>}</TableCell>\r\n\r\n                            </TableRow>\r\n                                {index === selectedRow && <TableRow selected={true}>\r\n                                    <TableCell colSpan={7}>\r\n                                        <Grid spacing={2} container={true}>\r\n                                            <Grid item md={6}>\r\n                                                <Grid container>\r\n                                                    <Grid xs={6}><Typography>Request Body</Typography></Grid>\r\n                                                    <Grid xs={6}><Grid container justify={\"flex-end\"}><Link>View Headers</Link>\r\n                                                    </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <TextField fullWidth={true} variant={'outlined'} rows={8}\r\n                                                           multiline={true}\r\n                                                           value={row.request} disabled={true}/>\r\n                                            </Grid>\r\n                                            <Grid item md={6}>\r\n                                                <Grid container>\r\n                                                    <Grid xs={6}><Typography>Response Body</Typography></Grid>\r\n                                                    <Grid xs={6}><Grid container justify={\"flex-end\"}><Link>View Headers</Link>\r\n                                                    </Grid>\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                                <TextField fullWidth={true} variant={'outlined'} rows={8}\r\n                                                           multiline={true}\r\n                                                           value={row.response} disabled={true}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </TableCell>\r\n                                </TableRow>}</>\r\n                        })}\r\n                    </TableBody>\r\n                    < TableFooter>\r\n                        < TableRow>\r\n                            {/*<TablePagination\r\n                                rowsPerPageOptions={[5, 10, 25]}\r\n                                colSpan={3}\r\n                                count={rows.length}\r\n                                rowsPerPage={rowsPerPage}\r\n                                page={page}\r\n                                SelectProps={{\r\n                                    inputProps: { 'aria-label': 'rows per page' },\r\n                                    native: true,\r\n                                }}\r\n                                onChangePage={handleChangePage}\r\n                                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                                ActionsComponent={TablePaginationActions}\r\n                            />*/\r\n                            }\r\n                        </TableRow>\r\n                    </TableFooter>\r\n                </Table>\r\n                {props.apiRunHistoryList && props.apiRunHistoryList.map(domain => {\r\n                    return <Card style={{marginTop: '5px'}}> <CardContent> <Grid container={true}><Grid item\r\n                                                                                                        md={4}>{domain.requestMethod + ' '}\r\n                        <div style={{\r\n                            display: 'inline-block',\r\n                            paddingLeft: '3px',\r\n                            paddingRight: '3px',\r\n                            borderRadius: 4,\r\n                            color: '#c7254e',\r\n                            backgroundColor: '#f9f2f4',\r\n                            width: 'auto'\r\n                        }}>\r\n                            <>{domain.url}</>\r\n                        </div>\r\n                    </Grid> <Grid item md={4}><Avatar style={{\r\n                        borderRadius: 5,\r\n                        height: 'auto',\r\n                        width: 'auto',\r\n                        display: \"inline-block\",\r\n                        padding: '0px 2px',\r\n                        backgroundColor: domain.responseStatus >= 200 && domain.responseStatus <= 299 ? '#18bc9c' : 'red'\r\n                    }}>{domain.responseStatus}</Avatar></Grid>\r\n                        <Grid item md={4}>{}</Grid></Grid></CardContent></Card>\r\n                })}\r\n            </Card>\r\n            <Dialog\r\n                fullWidth={true}\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                maxWidth=\"lg\"\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                open={props.apiModalShown}\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">{'Mock Api'}\r\n                    <IconButton aria-label=\"close\" onClick={closeApiPopup}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                    <IconButton onClick={create} aria-label=\"close\">\r\n                        <AddIcon/> Add Api\r\n                    </IconButton>\r\n                </DialogTitle>\r\n                <DialogContent dividers>\r\n                    {props.apiList && props.apiList.map(domain => {\r\n                        // @ts-ignore\r\n                        return <Card style={{marginTop: '5px'}}> <CardContent> <Grid container={true}><Grid item\r\n                                                                                                            md={4}>{domain.requestMethod}-\r\n                            <div style={{\r\n                                display: 'inline-block',\r\n                                paddingLeft: '3px',\r\n                                paddingRight: '3px',\r\n                                borderRadius: 4,\r\n                                color: '#c7254e',\r\n                                backgroundColor: '#f9f2f4',\r\n                                width: 'auto'\r\n                            }}>\r\n                                <>{domain.url}</>\r\n                            </div></Grid> <Grid item md={4}><Avatar style={{\r\n                            borderRadius: 5,\r\n                            backgroundColor: domain.responseStatus >= 200 && domain.responseStatus <= 299 ? '#18bc9c' : 'red'\r\n                        }}>{domain.responseStatus}</Avatar></Grid><Grid item md={4}> <Fab color='primary'\r\n                                                                                          size={\"small\"}>\r\n                            <EditIcon format=\"primary\" size=\"xs\" onClick={() => edit(domain.id)}>Edit\r\n                            </EditIcon>\r\n                        </Fab>\r\n\r\n                            <Fab color='primary'\r\n                                 size={\"small\"}>\r\n                                <DeleteIcon format=\"primary\" size=\"xs\" onClick={() => deleteApi(domain.id)}>Edit\r\n                                </DeleteIcon>\r\n                            </Fab>\r\n                        </Grid></Grid></CardContent></Card>\r\n                    })}\r\n                </DialogContent>\r\n                <Dialog\r\n                    fullWidth={true}\r\n                    disableBackdropClick\r\n                    disableEscapeKeyDown\r\n                    maxWidth=\"lg\"\r\n                    aria-labelledby=\"confirmation-dialog-title\"\r\n                    open={props.apiEditModalShown}\r\n                >\r\n                    <DialogTitle id=\"confirmation-dialog-title\">{'Mock Api'}\r\n                        <IconButton aria-label=\"close\" onClick={closeApiEditPopup}>\r\n                            <CloseIcon/>\r\n                        </IconButton>\r\n\r\n                    </DialogTitle>\r\n                    <DialogContent dividers>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12}>\r\n                                <Card>\r\n                                    <CardHeader title={'Define the Route of the app '}>\r\n                                    </CardHeader>\r\n                                    <Divider/>\r\n                                    <CardContent>\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item md={3}>\r\n                                                <FormControl fullWidth={true} variant={'outlined'}>\r\n                                                    <InputLabel htmlFor=\"age-native-helper\">Request Method</InputLabel>\r\n                                                    <NativeSelect\r\n                                                        value={requestMethod}\r\n                                                        onChange={(event) => setRequestMethod(event.target.value)}\r\n                                                        inputProps={{\r\n                                                            name: 'age',\r\n                                                            id: 'age-native-helper',\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"GET\">GET</option>\r\n                                                        <option value=\"POST\">POST</option>\r\n                                                        <option value=\"PUT\">PUT</option>\r\n                                                        <option value=\"GET\">PATCH</option>\r\n                                                        <option value=\"POST\">DELETE</option>\r\n                                                        <option value=\"OPTIONS\">OPTIONS</option>\r\n                                                        <option value=\"TRACE\">TRACE</option>\r\n                                                    </NativeSelect>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item md={3}>\r\n                                                <FormControl fullWidth={true}>\r\n                                                    <InputLabel htmlFor=\"age-native-helper\">Request\r\n                                                        Condition</InputLabel>\r\n                                                    <NativeSelect\r\n                                                        value={pathType}\r\n                                                        onChange={(event) => setPathType(event.target.value)}\r\n                                                        inputProps={{\r\n                                                            name: 'age',\r\n                                                            id: 'age-native-helper',\r\n                                                        }}\r\n                                                    >\r\n                                                        <option value=\"EXACT_MATCH\">Exact Match</option>\r\n                                                        <option value=\"CONTAINS\">Contains</option>\r\n                                                        <option value=\"PATTERN_MATCH\">Pattern Match</option>\r\n                                                        <option value=\"REGEX_MATCH\">Regex Match</option>\r\n                                                    </NativeSelect>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item md={6}>\r\n                                                <TextField label={'URL'} variant={'outlined'} fullWidth={true}\r\n                                                           value={url}\r\n                                                           onChange={(event) => setUrl(event.target.value)}></TextField>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Card>\r\n                                    <CardHeader title={'Rules If any If you don\\'t want default response'}\r\n                                                action={<IconButton onClick={createRule} aria-label=\"close\">\r\n                                                    <AddIcon/> Add Rule\r\n                                                </IconButton>}>\r\n\r\n                                    </CardHeader>\r\n                                    <Divider/>\r\n                                    <CardContent>\r\n                                        {props.apiRuleList && props.apiRuleList.map(domain => {\r\n                                            // @ts-ignore\r\n                                            return <Card style={{marginTop: '5px'}}> <CardContent> <Grid\r\n                                                container={true}><Grid item md={1}><Highlight>When</Highlight>\r\n                                            </Grid> <Grid item md={1}><Highlight\r\n                                                laungauge={'javascript'}>{domain.field}</Highlight></Grid> <Grid\r\n                                                item md={1}><Highlight\r\n                                                laungauge={'javascript'}>{domain.operator}</Highlight></Grid>\r\n                                                <Grid item md={2}><Highlight\r\n                                                    laungauge={'javascript'}>{domain.value}</Highlight></Grid>\r\n                                                <Grid item md={1}>\r\n                                                    <Highlight laungauge={'javascript'}>return</Highlight>\r\n                                                </Grid>\r\n                                                <Grid item md={1}>\r\n                                                    <Highlight\r\n                                                        laungauge={'javascript'}> {domain.responseStatus}</Highlight>\r\n                                                </Grid>\r\n                                                <Grid item md={5}>\r\n                                                    <Fab color='primary' size={\"small\"}>\r\n                                                        <EditIcon format=\"primary\" size=\"xs\"\r\n                                                                  onClick={() => editRule(domain.id)}>Edit\r\n                                                        </EditIcon>\r\n                                                    </Fab>\r\n                                                    <Fab color='primary'\r\n                                                         size={\"small\"}>\r\n                                                        <DeleteIcon format=\"primary\" size=\"xs\"\r\n                                                                    onClick={() => deleteRule(domain.id)}>Delete\r\n                                                        </DeleteIcon>\r\n                                                    </Fab>\r\n                                                </Grid></Grid></CardContent></Card>\r\n                                        })}\r\n                                    </CardContent>\r\n                                </Card>\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                                <Card>\r\n                                    <CardHeader title={'Default Response'}>\r\n                                    </CardHeader>\r\n                                    <Divider/>\r\n\r\n                                    <CardContent>\r\n                                        <Grid spacing={3} container={true}>\r\n                                            <Grid item sm={4}>\r\n                                                <TextField InputLabelProps={{shrink: true}} type={'number'}\r\n                                                           label={'Response Delayed By'} variant={'outlined'}\r\n                                                           fullWidth={true} value={responseDelayInSec}\r\n                                                           onChange={(event) => setResponseDelayInSec(event.target.value)}/>\r\n                                            </Grid>\r\n                                            <Grid item sm={4}>\r\n                                                <TextField type={'number'} label={'Return Http Response As'}\r\n                                                           variant={'outlined'} fullWidth={true} value={responseStatus}\r\n                                                           onChange={(event) => setResponseStatus(event.target.value)}/>\r\n                                            </Grid>\r\n                                            <Grid item sm={4}>\r\n                                            </Grid>\r\n                                            <Grid item sm={6}>\r\n                                                <TextField rows={8} label={'Default Response'} multiline={true}\r\n                                                           variant={'outlined'} fullWidth={true} value={response}\r\n                                                           onChange={(event) => setResponse(event.target.value)}/>\r\n                                            </Grid>\r\n                                            <Grid item sm={6}>\r\n                                                <TextField rows={8} label={'Default Header'} multiline={true}\r\n                                                           variant={'outlined'} fullWidth={true} value={header}\r\n                                                           onChange={(event) => setHeader(event.target.value)}/>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </CardContent>\r\n                                    <CardActions>\r\n                                        {!apiId && <Button variant={\"outlined\"} color={'primary'}\r\n                                                        onClick={saveApi}> Save </Button>}\r\n                                        {apiId && <Button variant={\"outlined\"} color={'primary'}\r\n                                                       onClick={updateApi}> Update </Button>}\r\n                                    </CardActions>\r\n                                </Card>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Dialog\r\n                            fullWidth={true}\r\n                            disableBackdropClick\r\n                            disableEscapeKeyDown\r\n                            maxWidth=\"lg\"\r\n                            aria-labelledby=\"confirmation-dialog-title\"\r\n                            open={props.ruleEditModalShown}\r\n                        >\r\n                            <DialogTitle id=\"confirmation-dialog-title\">{'Api Rule'}\r\n                                <IconButton aria-label=\"close\" onClick={closeRuleEditPopup}>\r\n                                    <CloseIcon/>\r\n                                </IconButton>\r\n\r\n                            </DialogTitle>\r\n                            <DialogContent dividers>\r\n                                <ApiRuleForm initialValues={{...currentRule, ...props.currentRule}}\r\n                                             onSubmit={updateRule}/>\r\n                            </DialogContent>\r\n                        </Dialog>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        domain: state.common['integrations_endpoints_endpoint-get'] && state.common['integrations_endpoints_endpoint-get'][0],\r\n        apiList: state.common['integrations_faker-apis_api-list-get'],\r\n        apiRuleList: state.common['integrations_api-rules_api-rules-list'],\r\n        apiRunHistoryList: state.common['integrations_faker-api-run-histories_api-run-histories-list'],\r\n        apiModalShown: state.common.modalStatus['integration_mock-api-code_list'],\r\n        apiEditModalShown: state.common.modalStatus['integration_mock-api-code_edit'],\r\n        ruleEditModalShown: state.common.modalStatus['integration_mock-api-rule_edit'],\r\n        updateRuleStatus: state.status['integrations_api-rules_update'],\r\n        currentApi: state.common['integrations_faker-apis_faker-get-id'],\r\n        currentRule: state.common['integrations_api-rules_rule-get-id']\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    post, get, put, showModal,\r\n    hideModal, clearMessage\r\n})(DomainView);\r\n\r\nconst ApiRuleEdit = (props) => {\r\n    return <form onSubmit={props.handleSubmit}><Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n            <Card>\r\n                <CardHeader title={'Define the Rule for this Route'}>\r\n                </CardHeader>\r\n                <Divider/>\r\n                <CardContent>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item md={3}>\r\n                            <Field\r\n                                variant={'outlined'}\r\n                                name=\"field\"\r\n                                component={renderSelect}\r\n                                label=\"Field\"\r\n                            >\r\n                                <MenuItem value=\"BODY\">BODY</MenuItem>\r\n                                <MenuItem value=\"HEADER\">HEADER</MenuItem>\r\n                                <MenuItem value=\"REQUEST_PARAM\">REQUEST PARAM</MenuItem>\r\n                                <MenuItem value=\"PATH_VARIABLE\">PATH VARIABLE</MenuItem>\r\n                            </Field>\r\n                        </Grid>\r\n                        <Grid item md={3}>\r\n                            <Field\r\n                                variant={'outlined'}\r\n                                name=\"operator\"\r\n                                component={renderSelect}\r\n                                label=\"Match Condition\"\r\n                            >\r\n                                <MenuItem value=\"CONTAINS\">CONTAINS</MenuItem>\r\n                                <MenuItem value=\"REGEX_MATCH\">REGEX MATCH</MenuItem>\r\n                            </Field>\r\n                        </Grid>\r\n                        <Grid item md={6}>\r\n                            <Field\r\n                                name=\"value\"\r\n                                component={renderTextField}\r\n                                label=\"Value\"\r\n                                variant={'outlined'}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n            <Card>\r\n                <CardHeader title={'Default Response'}>\r\n                </CardHeader>\r\n                <Divider/>\r\n\r\n                <CardContent>\r\n                    <Grid spacing={3} container={true}>\r\n                        <Grid item sm={12}>\r\n                            <Field\r\n                                type={'number'}\r\n                                name=\"responseStatus\"\r\n                                variant={'outlined'}\r\n                                component={renderTextField}\r\n                                label=\"Return Http Response As\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item sm={6}>\r\n                            <Field\r\n                                name=\"response\"\r\n                                variant={'outlined'}\r\n                                component={renderTextField}\r\n                                label=\"Default Response\"\r\n                                multiline={true}\r\n                                rows={8}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item sm={6}>\r\n                            <Field\r\n                                variant={'outlined'}\r\n                                name=\"header\"\r\n                                component={renderTextField}\r\n                                label=\"Default Header\"\r\n                                multiline={true}\r\n                                rows={8}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button variant={\"outlined\"} color={'primary'} type={'submit'}> Update </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    </Grid>\r\n    </form>\r\n}\r\n\r\nconst validate = (values) => {\r\n    const errors = {};\r\n    const requiredFields = [\r\n        'value',\r\n        'responseStatus',\r\n        'field',\r\n        'operator'\r\n    ];\r\n    requiredFields.forEach(field => {\r\n        if (!values[field]) {\r\n            errors[field] = 'Required';\r\n        }\r\n    });\r\n    /*if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n    ) {\r\n    errors.email = 'Invalid email address';\r\n    }*/\r\n    return errors;\r\n}\r\n\r\n\r\nconst ApiRuleForm = reduxForm({\r\n    form: 'apiRule',\r\n    validate,\r\n    enableReinitialize: true,\r\n})(ApiRuleEdit);\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {clearMessage, post} from \"cani-common-react\";\r\nimport {TextField, Grid, CssBaseline} from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport {addDomain} from \"../../redux/fakeApiAction\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    createTextField: {\r\n        float: 'left',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        '& fieldset': {\r\n            borderBottomRightRadius: '0px',\r\n            borderTopRightRadius: '0px',\r\n            borderRadius: '6px'\r\n        }\r\n    },\r\n    addOn: {\r\n        padding: '20px 15px',\r\n        fontSize: '15px',\r\n        fontWeight: 'normal',\r\n        lineHeight: 1,\r\n        color: '#2c3e50',\r\n        textAlign: 'center',\r\n        backgroundColor: '#ecf0f1',\r\n        border: '1px solid #dce4ec',\r\n        borderBottomLeftRadius: '0px',\r\n        borderTopLeftRadius: '0px',\r\n        borderRadius: '6px'\r\n    }\r\n}));\r\n\r\n\r\nconst Homepage = (props) => {\r\n    const classes = useStyles();\r\n    const [domain, setDomain] = useState(\"\");\r\n    const createEndpoint = () => {\r\n        props.addDomain({\"name\": domain});\r\n        //props.post(false, 'integrations9', 'integrations', 'endpoints', '', {name: domain}, \"update\");\r\n    };\r\n    useEffect(() => {\r\n     //props.clearMessage(\"integrations\", \"endpoints\", [\"update\"]);\r\n     if(props.updateEndpointStatus && props.updateEndpointStatus.success) {\r\n\r\n     }\r\n    },[props.updateEndpointStatus]);\r\n    return (\r\n        <>\r\n            <Container component=\"main\" maxWidth=\"lg\">\r\n                <Paper elevation={1} square={true}>\r\n                    <Box m={2}>\r\n                        <CssBaseline/>\r\n                        <Grid container={true}>\r\n                            <Grid alignContent={'center'} xs={12}>\r\n                                <Typography align={\"center\"} variant={'h5'}>\r\n                                    Rest API mocking and intercepting in seconds.\r\n                                    Replace the endpoint in the code and you are ready. It's that simple!\r\n                                </Typography>\r\n                                <Divider/>\r\n                            </Grid>\r\n\r\n                            <Grid xs={12} item={true}>\r\n                                <Box m={2}>\r\n                                <Grid container justify = \"center\">\r\n                                    <div className={classes.createTextField}>\r\n                                        <TextField\r\n                                            variant={'outlined'}\r\n                                            onChange={(event) => {setDomain(event.target.value)}}\r\n                                            value={domain}\r\n                                            id=\"adornment-weight\"\r\n                                            aria-describedby=\"weight-helper-text\"\r\n                                            inputProps={{\r\n                                                'aria-label': 'weight',\r\n                                                'height': '100px'\r\n                                            }}\r\n                                            label={'Domain'}\r\n                                        />\r\n                                        <div className={classes.addOn}> <Grid style={{alignSelf: 'center'}} container justify={\"flex-end\"} alignItems={\"flex-end\"}>com.canigenus.com</Grid></div>\r\n                                    </div>\r\n                                </Grid>\r\n                                </Box>\r\n                            </Grid>\r\n                            <Grid alignContent={'center'} justify={\"center\"} alignItems={'center'} xs={12} item={true}>\r\n                                <Typography align={\"center\"}>\r\n                                A sub-domain will be created for this endpoint where you can send requests.\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid xs={12} item={true}>\r\n                                <Grid container justify = \"center\">\r\n                                <Button onClick={createEndpoint} color={'secondary'} variant={'contained'}>Create Endpoint</Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <List dense={true}\r\n                              component=\"nav\"\r\n                              aria-labelledby=\"nested-list-subheader\"\r\n                              subheader={\r\n                                  <Grid container justify = \"center\">\r\n                                  <Typography  variant={'h6'} component=\"div\" id=\"nested-list-subheader\">\r\n                                      Use Cases\r\n                                  </Typography>\r\n                                  </Grid>\r\n                              }\r\n                        >\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Build a mock Rest API in a few seconds. Free, No coding required.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Inspect payloads of any HTTP request (GET, POST, PUT, PATCH, DELETE, etc).\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Customizable responses to simulate API response and failures.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"When load testing your API, do you really need to pass on the load to downstream APIs?\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Simulate latencies, timeouts and slow-responses of downstream APIs (validate rarely reachable code paths)\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"A/B testing by switching API endpoints or versions without any redeployment. (prod code vs new code)\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Don't block your UI devs when backend APIs are still in development. Just mock it!\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Create webhook endpoints and simulate responses.\"/>\r\n                            </ListItem>\r\n                        </List>\r\n\r\n                        <Divider/>\r\n                        <List dense={true}\r\n                              component=\"nav\"\r\n                              aria-labelledby=\"nested-list-subheader\"\r\n                              subheader={\r\n                                  <Grid container justify = \"center\">\r\n                                      <Typography  variant={'h6'} component=\"div\" id=\"nested-list-subheader\">\r\n                                          Features\r\n                                      </Typography>\r\n                                  </Grid>\r\n                              }\r\n                        >\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"HTTP request intercepting for debugging and inspecting payload.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Get named endpoints/sub-domains - easy to replace base URL in your code.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Proxy Setup: Rule based approach to mock a few calls and hit real API for the rest.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Capturing HTTP requests in real time.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText\r\n                                    primary=\"Support for CORS & preflight requests (OPTIONS) is out of the box.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Keep Calm & Get 200 OK.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"All endpoints are HTTPS enabled.\"/>\r\n                            </ListItem>\r\n                            <ListItem dense={true}>\r\n                                <ListItemIcon>\r\n                                    <SendIcon/>\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Requestbin + Mocky.io + Http-proxy => DummyMonk. ❤️\"/>\r\n                            </ListItem>\r\n                        </List>\r\n                    </Box>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        accessToken: state.auth.tokenInfo.accessToken,\r\n        clientCode: state.client.clientCode,\r\n        permissions: state.auth.allPermissions,\r\n        name: state.auth.userInfo ? state.auth.userInfo.name : \"\",\r\n        updateEndpointStatus: state.status['integrations_endpoints_update'],\r\n    };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    {post, clearMessage, addDomain}\r\n)(Homepage);\r\n","import {ADD_FREE_DOMAIN} from \"./fakeApiTypes\";\r\nimport {caniAxios} from \"cani-common-react\";\r\nconst data = require('./../data/data.json');\r\n\r\nexport const addDomain  = (domain) => async(dispatch, getState) => {\r\n  const savedDomain = await caniAxios.post(\"/integrations/api/v1/\"+getState().client.clientCode+\"/endpoints\", domain);\r\n  dispatch({\r\n    type: ADD_FREE_DOMAIN,\r\n    payload: {value:savedDomain.data.name}\r\n  });\r\n};\r\n","import blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\nconst green = '#2AC37D';\nconst gray = '#D3D3D3';\nconst teal = '#008080';\n\nexport default {\n  black,\n  white,\n  primary: {\n    main: gray,\n  },\n  secondary: {\n    main: teal,\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\nimport palette from './palette';\n\nconst theme = createMuiTheme({\n  palette,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\r\nimport  Router from '../../Router';\r\n\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <>\r\n            <Router />\r\n        </>\r\n        \r\n    )\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport {clientReducers} from \"cani-common-react\";\r\nimport {authReducers} from 'cani-common-react';\r\nimport {statusReducers} from \"cani-common-react\"\r\nimport {commonReducers} from \"cani-common-react\";\r\nimport {eavReducers} from 'cani-common-react';\r\nimport {entityReducers} from 'cani-common-react';\r\nimport {usersReducers} from \"cani-common-react\";\r\nimport fakeApiReducers from \"./fakeApiReducers\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nexport default combineReducers ({\r\n  form: formReducer,\r\n  client: clientReducers,\r\n  auth: authReducers,\r\n  status:statusReducers,\r\n  common:commonReducers,\r\n  eav: eavReducers,\r\n  eavEntity: entityReducers,\r\n  users: usersReducers,\r\n  fakeApi:fakeApiReducers,\r\n})\r\n","import {FREE_DOMAINS_LIST, ADD_FREE_DOMAIN, PAID_DOMAINS_LIST} from \"./fakeApiTypes\";\r\n\r\nexport default (state = {\r\n  compareIds : [],\r\n  freeDomains: []\r\n}, action) => {\r\n  switch (action.type) {\r\n    case FREE_DOMAINS_LIST:\r\n      return {...state , [action.payload.key]:  action.payload.values};\r\n    case ADD_FREE_DOMAIN:\r\n      return {...state , freeDomains: [ ...state.freeDomains, action.payload.value]};\r\n    case PAID_DOMAINS_LIST:\r\n      return {...state,\"compareIds\":[...state.compareIds,action.payload.value] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const Colors = {\r\n  LIGHT: [\"#ffffff\"],\r\n  DARK: [\"#394553\"],\r\n  DODGERBLUE: [\r\n    \"#2ca0f7\",\r\n    \"#1a91eb\",\r\n    \"#1584d7\",\r\n    \"#2084d0\",\r\n    \"#0c72c0\",\r\n    \"#186cac\",\r\n    \"#1468a7\"\r\n  ],\r\n  GAINSBORO: [\r\n    \"#ffffff\",\r\n    \"#feffff\",\r\n    \"#f2f4f8\",\r\n    \"#edeff4\",\r\n    \"#f2f6f8\",\r\n    \"#e1e6eb\",\r\n    \"#ced0da\"\r\n  ],\r\n  FORESTGREEN: [\r\n    \"#39b54a\",\r\n    \"#35ab44\",\r\n    \"#1e9d09\",\r\n    \"#1e930b\",\r\n    \"#187a08\",\r\n    \"#1a750b\",\r\n    \"#13661e\"\r\n  ],\r\n  ORANGERED: [\r\n    \"#f7971c\",\r\n    \"#f76f1c\",\r\n    \"#ef911a\",\r\n    \"#ea6411\",\r\n    \"#e98a12\",\r\n    \"#e65c08\",\r\n    \"#e25d0e\"\r\n  ],\r\n  CRIMSON: [\r\n    \"#f75157\",\r\n    \"#de1920\",\r\n    \"#f14c51\",\r\n    \"#d21820\",\r\n    \"#eb4248\",\r\n    \"#bf0f16\",\r\n    \"#d01119\"\r\n  ],\r\n  LIGHTSLATEGRAY: [\r\n    \"#516072\",\r\n    \"#3b4958\",\r\n    \"#415061\",\r\n    \"#303e4d\",\r\n    \"#354252\",\r\n    \"#242f3c\",\r\n    \"#394553\"\r\n  ]\r\n};\r\n","import { Colors } from \"./colors\";\r\n\r\nexport const LightTheme = {\r\n  colors: {\r\n    light: Colors.LIGHT,\r\n    dark: Colors.DARK,\r\n    primary: Colors.DODGERBLUE,\r\n    secondary: Colors.GAINSBORO,\r\n    success: Colors.FORESTGREEN,\r\n    warning: Colors.ORANGERED,\r\n    prominent: Colors.CRIMSON,\r\n    granite: Colors.LIGHTSLATEGRAY\r\n  }\r\n};\r\n","import React from 'react';\r\nimport './index.css';\r\nimport App from './components/app/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {PersistGate} from 'redux-persist/integration/react';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./redux\";\r\nimport { persistReducer, persistStore } from \"redux-persist\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { hydrate, render } from \"react-dom\";\r\nimport {ThemeProvider} from \"styled-components\";\r\nimport {LightTheme} from \"./theming\";\r\nimport {ToastContainer} from 'react-toastify';\r\n\r\nconst composeEnhancers = (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage: storage,\r\n    whitelist: [\"auth\", \"client\", \"fakeApi\"]\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\nconst store = createStore(\r\n    persistedReducer,\r\n    (window as any).INITIAL_STATE,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n);\r\nconst persistor = persistStore(store);\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\n\r\n// @ts-ignore\r\nconst elements =\r\n    <ThemeProvider theme={LightTheme}>\r\n        <Provider store={store}>\r\n            <PersistGate loading={null} persistor={persistor}>\r\n                <>\r\n                    <ToastContainer autoClose={8000} />\r\n                 <App/>\r\n                </>\r\n            </PersistGate>\r\n        </Provider>\r\n    </ThemeProvider>;\r\n\r\nif (rootElement && rootElement.hasChildNodes()) {\r\n    hydrate(elements, rootElement);\r\n} else {\r\n    render(elements, rootElement);\r\n}\r\n//ReactDOM.render(, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}